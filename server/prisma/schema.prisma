// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EntityInfo {
  id                     Int       @id @default(autoincrement())
  name                   String
  tradingName            String?
  countryOfIncorporation String
  natureOfBusiness       String
  companyWebsite         String
  dateOfIncorporation    DateTime
  incorporationNumber    String
  licenceNumber          String
  licenseFrom            DateTime?
  licenseTo              DateTime?
  registeredAddress      String
  numberOfBranches       Int       @default(1)
  jurisdiction           String?

  riskAssessmentId Int?
  RiskAssessment   RiskAssessment?

  agentId Int?
  Agent   Agent?

  natureOfCustomerId Int?
  NatureOfCustomer   NatureOfCustomer?

  kycBankId Int?
  KycBank   KycBank?

  kycNonBankId Int?

  amlTrainingId Int?
  AMLTraining   AMLTraining?

  declarationId Int?
  Declaration   Declaration?

  confirmationOfRelianceId Int?
  ConfirmationOfReliance   ConfirmationOfReliance?

  ownershipDetailId Int?
  OwnershipDetail   OwnershipDetail?
}

model DesignatedOfficer {
  id          Int    @id @default(autoincrement())
  name        String
  designation String
  email       String
  phoneNumber String

  aMLPoliciesProcedureId Int                  @unique
  aMLPoliciesProcedure   AMLPoliciesProcedure @relation(fields: [aMLPoliciesProcedureId], references: [id])
}

model PolicyComponent {
  id                          Int     @id @default(autoincrement())
  cashReporting               Boolean
  cdd                         Boolean
  edd                         Boolean
  beneficialOwnership         Boolean
  independentTesting          Boolean
  periodicReview              Boolean
  policiesAndProcedures       Boolean
  riskAssessment              Boolean
  sanctionsScreening          Boolean
  assetsFreezing              Boolean
  pepFreezing                 Boolean
  adverseInfoFreezing         Boolean
  suspiciousActivityScreening Boolean
  trainingAndEducation        Boolean
  transactionMonitoring       Boolean

  aMLPoliciesProcedureId Int                  @unique
  aMLPoliciesProcedure   AMLPoliciesProcedure @relation(fields: [aMLPoliciesProcedureId], references: [id])
}

model AMLPoliciesProcedure {
  id                                 Int      @id @default(autoincrement())
  suspiciousActivityReporting        Boolean?
  aMLLaws                            Boolean
  adverseInfoScreening               Boolean?
  aMLLawsApplicable                  String?
  pepScreening                       Boolean?
  consistentWithFATF                 Boolean
  assetsScreening                    Boolean?
  subjectToInspection                Boolean
  sanctionScreening                  Boolean?
  regulatorName                      String
  riskAssessment                     Boolean?
  internalAudit                      Boolean
  policiesProcedures                 Boolean?
  recentReportUrl                    String?
  periodicReview                     Boolean?
  externalAudit                      Boolean
  independentTesting                 Boolean?
  beneficialOwnership                Boolean?
  lastRegulatoryInspectionDate       DateTime
  letterOfComfortUrl                 String
  complianceProgramApprovalDate      DateTime
  policyProhibitingAccounts          Boolean
  policyCoveringPEPs                 Boolean
  recordRetentionProcedure           Boolean
  retentionPeriod                    String?
  policyApplicableToBranches         Boolean
  policyApplicableToBranchesUrl      String?
  regulatoryEnforcementAction        Boolean
  regulatoryEnforcementActionDetails String?
  agreementNotificationRequired      Boolean
  deniedLicence                      Boolean
  deniedLicenceDetails               String?
  reasonablePolicies                 Boolean
  reasonablePoliciesDetails          String?

  designatedOfficerId Int?
  designatedOfficer   DesignatedOfficer?

  policyComponentId Int?
  PolicyComponent   PolicyComponent?

  externalAuditorId Int?
  externalAuditor   ExternalAuditor[]
}

model ExternalAuditor {
  id              Int      @id @default(autoincrement())
  name            String
  lastReviewDate  DateTime
  recentReportUrl String

  aMLPoliciesProcedureId Int
  aMLPoliciesProcedure   AMLPoliciesProcedure @relation(fields: [aMLPoliciesProcedureId], references: [id])
}

model RiskAssessment {
  id                         Int     @id @default(autoincrement())
  riskBasedAssessment        Boolean
  riskBasedAssessmentDetails String?
  appropriateLevel           Boolean
  appropriateLevelDetails    String?

  entityInfoId Int        @unique
  entityInfo   EntityInfo @relation(fields: [entityInfoId], references: [id])
}

model Agent {
  id                   Int     @id @default(autoincrement())
  appointAgents        Boolean
  appointAgentsDetails String?

  entityInfoId Int        @unique
  entityInfo   EntityInfo @relation(fields: [entityInfoId], references: [id])
}

model AMLTraining {
  id                  Int      @id @default(autoincrement())
  training            Boolean
  trainingRecords     Boolean
  communicateAML      Boolean
  employThirdParty    Boolean
  thirdPartyForegoing Boolean?

  entityInfoId Int        @unique
  entityInfo   EntityInfo @relation(fields: [entityInfoId], references: [id])
}

model NatureOfCustomer {
  id                         Int     @id @default(autoincrement())
  banks                      Float
  moneyService               Float
  individual                 Float
  highNetWorthIndividual     Float
  casinos                    Float
  realEstateAgent            Float
  preciousMetalsDealer       Float
  legalProfessional          Float
  trusts                     Float
  operationsFATF             Boolean
  operationsFATFDetails      String?
  notLicensedPartners        Boolean
  notLicensedPartnersDetails String?

  entityInfoId Int        @unique
  entityInfo   EntityInfo @relation(fields: [entityInfoId], references: [id])
}

model Declaration {
  id                       Int     @id @default(autoincrement())
  ownerDeclaredUnfit       Boolean
  declaredUnfitDetails     String?
  declaredUnfitDetailsUrl  String?
  ownerSuspended           Boolean
  ownerSuspendedDetails    String?
  ownerSuspendedDetailsUrl String?

  entityInfoId Int        @unique
  entityInfo   EntityInfo @relation(fields: [entityInfoId], references: [id])
}

model ConfirmationOfReliance {
  id                  Int      @id @default(autoincrement())
  orgName             String
  tradingName         String
  authorizedSignatory String
  designation         String
  email               String
  date                DateTime

  entityInfoId Int        @unique
  entityInfo   EntityInfo @relation(fields: [entityInfoId], references: [id])
}

model OwnershipDetail {
  id                    Int                     @id @default(autoincrement())
  publiclyTraded        Boolean
  exchangeTradedOn      String?
  privatelyOwned        Boolean
  shareholderDetails    String?
  ownershipChartsUrl    String?
  pepsAssociated        Boolean
  entityInfoId          Int                     @unique
  entityInfo            EntityInfo              @relation(fields: [entityInfoId], references: [id])
  OwnershipMemberDetail OwnershipMemberDetail[]
  PepMemberDetail       PepMemberDetail[]
}

model KycBank {
  id                            Int     @id @default(autoincrement())
  process                       Boolean
  sanctionScreening             Boolean
  partnersAMLPolicies           Boolean
  dueDiligenceMeasures          Boolean
  dueDiligenceDetails           String?
  riskBasedAssessmentCompletion Boolean

  entityInfoId Int        @unique
  entityInfo   EntityInfo @relation(fields: [entityInfoId], references: [id])
}

model OwnershipMemberDetail {
  id             Int             @id @default(autoincrement())
  fullName       String
  idDocType      String
  idDocNumber    String
  residence      String
  nationality    String
  designation    String
  pepDesignation Boolean
  attachmentsUrl String
  ownershipId    Int
  ownership      OwnershipDetail @relation(fields: [ownershipId], references: [id])
}

model PepMemberDetail {
  id             Int             @id @default(autoincrement())
  fullName       String
  idDocType      String
  idDocNumber    String
  residence      String
  nationality    String
  designation    String
  pepDesignation Boolean         @default(true)
  attachmentsUrl String
  ownershipId    Int
  ownership      OwnershipDetail @relation(fields: [ownershipId], references: [id])
}

model DocRequirementChecklist {
  id                              Int                     @id @default(autoincrement())
  licence                         Boolean
  licenceUrl                      String?
  memoOfAssociation               Boolean
  memoOfAssociationUrl            String?
  certOfIncorporation             Boolean
  certOfIncorporationUrl          String?
  amlPolicy                       Boolean
  amlPolicyUrl                    String?
  ultimateBeneficialOwnersList    Boolean
  ultimateBeneficialOwnersListUrl String?
  idShareholders                  Boolean
  idShareholdersList              ShareholderID[]
  organisationalChart             Boolean
  organisationalChartUrl          String?
  bodList                         Boolean
  bodListUrl                      String?
  bodIDCopies                     Boolean
  bodIDCopiesList                 BoardOfDirectorID[]
  authorizedSignatoriesList       Boolean
  authorizedSignatoriesListUrl    String?
  authorizedSignatoriesIds        Boolean
  authorizedSignatoriesIdsList    AuthorizedSignatoryID[]
  latestUtilityBill               Boolean
  latestUtilityBillUrl            String?
  latestFinStatement              Boolean
  latestFinStatementUrl           String?
  latestAudit                     Boolean
  latestAuditUrl                  String?
}

model ShareholderID {
  id                        Int                      @id @default(autoincrement())
  idUrl                     String
  docRequirementChecklist   DocRequirementChecklist? @relation(fields: [docRequirementChecklistId], references: [id])
  docRequirementChecklistId Int?
}

model BoardOfDirectorID {
  id                        Int                      @id @default(autoincrement())
  idUrl                     String
  docRequirementChecklist   DocRequirementChecklist? @relation(fields: [docRequirementChecklistId], references: [id])
  docRequirementChecklistId Int?
}

model AuthorizedSignatoryID {
  id                        Int                      @id @default(autoincrement())
  idUrl                     String
  docRequirementChecklist   DocRequirementChecklist? @relation(fields: [docRequirementChecklistId], references: [id])
  docRequirementChecklistId Int?
}
